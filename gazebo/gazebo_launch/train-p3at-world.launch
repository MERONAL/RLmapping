<!-- This is a sample lanuch file, please change it based on your needs -->
<launch>

  <env name="GAZEBO_MODEL_PATH" value="$GAZEBO_MODEL_PATH:$(find amr_robots_gazebo)/models" />
  <env name="GAZEBO_RESOURCE_PATH" value="$GAZEBO_RESOURCE_PATH:$(find amr_robots_gazebo)/models" />

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="true"/>
  <arg name="world" default="$(find amr_robots_gazebo)/train.world" /> 
  <arg name="urdf" default="$(find amr_robots_description)/urdf/pioneer3at-multi.urdf" />

<!--group ns="robot0">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot0"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot0 -param robot_description -x 0 -y 0 -z 0.5"/> 
</group--> 

<group ns="robot1">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot1"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot1 -param robot_description -x 7 -y 0 -z 0.5"/> 
</group> 

<!--group ns="robot2">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot2"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot2 -param robot_description -x 15 -y 0 -z 0.5"/> 
</group> 

<group ns="robot3">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot3"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot3 -param robot_description -x 22 -y 0 -z 0.5"/> 
</group--> 

<group ns="robot4">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot4"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot4 -param robot_description -x 0 -y 7 -z 0.5"/> 
</group> 

<!--group ns="robot5">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot5"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot5 -param robot_description -x 7 -y 7 -z 0.5"/> 
</group> 

<group ns="robot6">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot6"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot6 -param robot_description -x 15 -y 7 -z 0.5"/> 
</group--> 

<group ns="robot7">
  <param name="robot_description" command="$(find xacro)/xacro.py  $(arg urdf) ns:=robot7"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot7 -param robot_description -x 22 -y 7 -z 0.5"/> 
</group> 


  <!-- set use_sim_time flag -->
  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg headless)" name="command_arg2" value=""/>
  <arg     if="$(arg headless)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- start gazebo server-->
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="false" output="screen"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) $(arg world)" />
	
  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group>

  <!--node name="realposepub" pkg="amr_robots_gazebo" type="realpose.py" /-->
</launch>

